import streamlit as st
from datetime import datetime
import math                                # biblioteca nativa de Python

# ---------- CONFIGURA√á√ïES ----------
st.set_page_config(page_title="An√°lise de Grupos - Hotel", layout="centered")

# ---------- REGRAS DE NEG√ìCIO ----------
DESCONTO_PADRAO_GRUPO = 0.10              # 10‚ÄØ% OFF padr√£o
TARIFAS_POR_TEMPORADA = {
    "alta": 1.3,                          # +30‚ÄØ% na alta
    "media": 1.0,
    "baixa": 0.8                          # ‚Äì20‚ÄØ% na baixa
}

# ---------- INTERFACE ----------
st.title("üè® C√°lculo de Demanda de Grupos")

with st.form("dados_grupo"):
    col1, col2 = st.columns(2)
    with col1:
        data_entrada = st.date_input("üìÖ Data de Entrada", datetime.today())
        data_saida   = st.date_input("üìÖ Data de Sa√≠da",   datetime.today())
        tarifa_media = st.number_input("üí∞ Tarifa m√©dia (R$)", min_value=0.0, value=359.00)
    with col2:
        quartos_grupo      = st.number_input("üõèÔ∏è Quartos solicitados", min_value=0, value=11)
        total_quartos_hotel = st.number_input("üè® Total de quartos",   min_value=0, value=321)
        evento_especial    = st.selectbox("üéâ Evento especial?", ["N√£o", "Sim"])
    submitted = st.form_submit_button("üìä Calcular")

# ---------- C√ÅLCULOS ----------
if submitted:
    # valida√ß√£o de datas
    if data_entrada >= data_saida:
        st.error("‚ùå Data de sa√≠da deve ser ap√≥s a entrada!")
    else:
        # 1. temporada
        mes = data_entrada.month
        temporada = "alta"  if mes in [12, 1, 2] else \
                    "baixa" if mes in [6, 7]     else "media"

        # 2. tarifa base por temporada
        tarifa_base = tarifa_media * TARIFAS_POR_TEMPORADA[temporada]

        # 3. desconto ou ajuste
        if evento_especial == "N√£o":
            tarifa_sugerida = tarifa_base * (1 - DESCONTO_PADRAO_GRUPO)
            motivo_desconto = f"Desconto comercial de {DESCONTO_PADRAO_GRUPO*100:.0f}%"
        else:
            tarifa_sugerida = tarifa_base * (1.1 - DESCONTO_PADRAO_GRUPO)  # +5‚ÄØ%
            motivo_desconto = "Evento especial: 5‚ÄØ% extra"

        # arredondamentos inteiros
        tarifa_inferior  = math.floor(tarifa_sugerida)
        tarifa_superior  = math.ceil(tarifa_sugerida)

        # 4. noites e receita
        noites         = (data_saida - data_entrada).days
        receita_total  = tarifa_sugerida * quartos_grupo * noites

        # ---------- RESULTADOS ----------
        st.success("‚úÖ **Resultados**")

        col1, col2, col3 = st.columns(3)
        col1.metric("üìÖ Per√≠odo",     f"{noites} noites")
        col2.metric("üìä Temporada",   temporada.capitalize())
        col3.metric("üí° Tarifa Sug.", f"R$ {tarifa_sugerida:.2f}", motivo_desconto)

        st.write(f"**Receita Total do Grupo:** R$ {receita_total:,.2f}")

        # faixa arredondada
        st.info(f"‚ÜïÔ∏è Valor arredondado: entre **R$¬†{tarifa_inferior}** e **R$¬†{tarifa_superior}**")

        # ---------- COMPARA√á√ÉO ----------
        st.markdown("### üîç Compara√ß√£o com Tarifa M√©dia")
        st.write(f"- Tarifa m√©dia do per√≠odo: R$ {tarifa_media:.2f}")
        variacao_perc = (tarifa_sugerida - tarifa_base) / tarifa_base * 100
        st.write(f"- Tarifa sugerida para o grupo: R$ {tarifa_sugerida:.2f} ({variacao_perc:.1f}‚ÄØ%)")

        # alerta comercial
        if tarifa_sugerida >= tarifa_media and evento_especial == "N√£o":
            st.warning("‚ö†Ô∏è **Aten√ß√£o!** Tarifa igual ou acima da m√©dia pode desincentivar a venda via comercial.")
